<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="car" class="com.yang.entity.Car">
        <property name="id" value="1"></property>
        <property name="name" value="劳斯莱斯"></property>
    </bean>

    <!--通过autowire属性实现自动装载，byName会从当前的person对象中寻找需要注入的类型
    byName：
        person需要的外部依赖是car，所以在当前IoC容器中寻找id为Car的对象，并且自动装载到person对象中
    但是！！！注意，byName的方式只会对应当前类（person）中的成员变量名car，如果IoC容器的car对象改为id="car1"，那么就会自动装载失败了。
    person的成员变量名字改变同理

    byType：
        通过当前类（person）的成员变量类型来获取需要注入的bean对象，此方法无论需要的bean（car）的id与当前类（person）的成员变量 名 相同与否
        对结果不造成影响，bean（car）的id可以任意取，在bean（person）中都可以获取到

        但是注意！！ 在使用byType的方式时，如果当前IoC容器中存在另外一个相同类型但不同名的bean对象，那么就会报出一个异常，异常内容是找到了两个
        都可以注入到当前对象的bean对象，所以就会报错（类似于获取bean对象的两种方法中的通过class获取bean对象）
    -->
    <bean id="person" class="com.yang.entity.Person" autowire="byName">
        <property name="id" value="1"></property>
        <property name="name" value="杨"></property>
        <!--直接使用ref将car依赖注入到person中不属于自动装载，此种方式为手动装载-->
<!--        <property name="car" ref="car"></property>-->
    </bean>


</beans>