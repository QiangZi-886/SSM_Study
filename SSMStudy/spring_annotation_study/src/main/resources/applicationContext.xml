<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--在之前的操作中，都是使用bean标签向IOC容器中注册bean，现在学习使用注解的方式
    在使用注解的时候，可以在当前类的上面添加某些注解标识
    @Component：组件，理论上可以在任意的类上进行添加，在扫描的时候都会完成bean的注册
    @Controller：放置在控制层，用来接收用户的请求
    @Service：放置在业务逻辑层，
    @Repository：

    这四个注解标识写在类上的时候，都可以完成注协bean的功能，但是这些规定，并不是spring识别的标识
    在spring程序运行过程中，不会对这四个注解做任何区分，看起来是一样的，都会完成注册bean的功能
    在实际开发中，最好能分清楚，提高代码可读性

    在使用注解的时候，还需要告诉spring应该从哪个包进行扫描,需要导入context命名空间。一般在定义的时候也写上相同包的路径

    在使用注解的时候，没有定义id和class，那么如何根据id来进行识别？
        默认是把当前类的首字母小写之后作为id，如果需要改变名称，那么需要在注解添加参数值value来完成修改参数名的目的

     @Scope注解可以声明当前类是单例还是多例
    -->
    <context:component-scan base-package="com.yang">
        <!--当定义好注解的扫描路径之后，可以做更加细腻度的控制，可以选择扫描哪个注解，也可以选择不扫描哪个注解
        include-filter：表示要包含扫描的注解,一般不会定义此规则
        exclude-filter：表示要排除扫描的注解，使用较多

        type：规则的类型
        expression：表达式

        首先是exclude（排除扫描）
        assignable:可以指定类的名称。但是表达式必须是完全限定名
        annotation:按照注解来进行排除，但是表达式中必须是注解的完全限定名
        regex:使用正则表达式的方式，一般不用
        aspectj:使用切面的方式，一般不用
        custom:使用自定义的方式，可以自己定义自己的筛选规则，一般不用
        -->
        <!--assignable 表示排除掉某个类不被扫描-->
<!--        <context:exclude-filter type="assignable" expression="com.yang.controller.PersonController"/>-->
        <!--带controller的类都不被扫描-->
<!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--        <context:include-filter type="assignable" expression="com.yang.controller.PersonController"/>-->
    </context:component-scan>
</beans>